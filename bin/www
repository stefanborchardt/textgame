#!/usr/bin/env node
/**
 * Create HTTP server and app for HTTPS redirect.
 */
const express = require('express');
const http = require('http');
const theApp = require('../app');

const securePort = theApp.config.get('https.port');

/**
 * Event listener for HTTPS server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? `Pipe ${securePort}`
    : `Port ${securePort}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}


theApp.server.listen(securePort);
theApp.server.on('error', onError);

const httpApp = express();
const httpRouter = express.Router();
httpApp.use('*', httpRouter);
httpRouter.get('*', (req, res) => {
  const destination = `https://${req.hostname}:${securePort}${req.url}`;
  return res.redirect(destination);
});
const httpServer = http.createServer(httpApp);
httpServer.listen(theApp.config.get('http.port'));
